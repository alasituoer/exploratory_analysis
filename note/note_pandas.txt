
#2017/11/16-3 bokeh seaborn 可视化包

#2017/11/16-2 np.random.rand() 产生随机值,各类随机值及适用范围

#2017/11/16-1 使用 pandas boxplot() 画箱线图
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
np.random.seed(10)
df = pd.DataFrame(np.random.rand(5,4))
df.columns = ['a', 'b', 'c', 'd',]
df.boxplot()
plt.xlabel("columns")
plt.ylabel("random data")
plt.show()
# 箱线图及其(python)定义_显示数据的离散分布情况
maximum value
75th percentile(Q3)
50th percentile(median)
[mean](optional)
25th percentile(Q1)
minimum value
# 引入离群点的定义, 同时修改最大最小值的定义为最大最小观测值,
# 距离四分位数值1.5个IQR = Q3-Q1（中间四分位极差）
# min = Q1-1.5*IQR, max = Q3-1.5*IQR
# 一、箱线图可以直观地识别数据集中的异常值
# 二、判断数据集的数据离散程度和偏向(盒子的长度、上下间隔的形状、胡须whisker的长度)




#4 apply() applymap() map()的区别
df.apply(lambda c: c.sum()) # 作用于列或者行
df.applymap(lambda x: '%.2f' % x) # 作用于DataFrame中的每一个元素
df['a'].map(lambda x: float(x)) # 作用于Series中的每一个元素


#3 DataFrame 将一列分为新的多列, 并重新赋值列索引
df_s = df['a'].str.split(',', expand=True)
df_s.columns = ['value_' + str(i+1) for i in df_s.columns]
# 如果列中字符串是多个数值拼接的, 拆分后还得转换成数值型才能进行计算
df_s.applymap(lambda x: '%.2f' % float(x))
# 将拆分后的多列追加到原DataFrame最后
df = pd.concat([df, df_s], axis=1)
# 看是够需要删除拆分前的那列
#del df['a']

#2 pandas DataFrame去重
df.drop_duplicates([subset=""], keep="last", inplace=True)

#1 pandas error; C error: out of memory
mylist = []
for chunk in pd.read(*.csv, chunksize=20000, sep=';', low_memory=False):
    mylist.append(chunk)
	big_data = pd.concat(mylist, axis=0)
del mylist
print big_data


